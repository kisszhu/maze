// 必选，不包括物理含义，只有逻辑含义（不是文件路径）
package com.zhl.rules.drools;

// 和Java的区别是，可以导入一个类的静态方法（Java只能导入类）
import com.zhl.rules.Test.User;

// 规则1，如果有钱就买一瓶喝掉
// 每个规则中指定了salience属性，该属性的值越大表示执行的优先级就越高，越先被执行
// 定义一个规则，一个规则基本包括三个部分：1属性部分、2条件部分、3结果部分
rule "r001"
 salience 3 // 属性部分
 when // 条件部分 LHS
  $u:User(money>0)
 then // RHS 结果部分
  System.out.println("余钱："+$u.getMoney()+",花1元购买1瓶并喝掉");
  $u.setKp($u.getKp()+1);
  $u.setMoney($u.getMoney()-1);
  $u.setTotals($u.getTotals()+1);
  update($u);
 end


// 规则2，如果空瓶数大于2则换购1瓶（兑换成1元钱）
rule "r002"
 salience 2
 when
  $u:User(kp>=2)
 then
  System.out.println("空瓶数："+$u.getKp()+",兑换2个空瓶为1元钱");
  $u.setKp($u.getKp()-2);
  $u.setMoney($u.getMoney()+1);
  update($u);
 end

// 规则3，打印已经喝掉的数量
rule "r003"
 salience 1
 when
  $u:User();
 then
  System.out.println("总喝掉瓶数："+$u.getTotals());
 end
